name: deploy to lambda

on:
  push:
    branches:
      - main
      - test

jobs:
  env-setting:
    runs-on: ubuntu-latest
    outputs:
      change-files: ${{ env.CHANGE_FILES }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      
      - id: files
        uses: jitterbit/get-changed-files@v1

      - name: print
        run: |
          for changed_file in ${{ steps.files.outputs.all }}; do
            echo "CHANGE_FILES=$changed_file" >> $GITHUB_ENV
          done

  upload-lambda:
    if: change=$(echo "${{ needs.env-settig.outputs.change-files }}" | grep -c '^source/micehubUpload/')
    runs-on: ubuntu-latest
    needs: [ env-setting ]
    steps:
      - name: print
        run: echo ${{ needs.env-settig.outputs.change-files }}

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Deploy function code
      - name: Package function code
        run: |
          cd source/micehubUpload/function
          zip -r ../function.zip ./*

      - name: Deploy Lambda function
        run: |
          cd source/micehubUpload
          aws lambda update-function-code \
            --function-name gitRepoTest \
            --zip-file fileb://function.zip \
            --publish
      
      # Deploy layer
      - name: Install dependencies and build layer
        if: change=$(echo "${{ needs.env-settig.outputs.change-files }}" | grep -c '^source/micehubUpload/requirements.txt')
        run: |
          python -m pip install --upgrade pip
          cd source/micehubUpload
          pip install -r requirements.txt -t python
          zip -r9 python.zip ./python
      
      - name: Declare layer variable
        run: |
          echo "latest_upload_layer_arn=" >> $GITHUB_ENV

      - name: Deploy Lambda layer
        if: change=$(echo "${{ needs.env-settig.outputs.change-files }}" | grep -c '^source/micehubUpload/requirements.txt')        
        run: |
          cd source/micehubUpload
          echo "latest_upload_layer_arn=$(aws lambda publish-layer-version \
            --layer-name testLayer \
            --zip-file fileb://python.zip \
            --compatible-runtimes python3.9 \
            --query 'LayerVersionArn' \
            --output text)" >> $GITHUB_ENV
      
      # Connect function code and layer
      - name: Connect Lambda function and layer
        if: change=$(echo "${{ needs.env-settig.outputs.change-files }}" | grep -c '^source/micehubUpload/requirements.txt')
        run: |
          aws lambda update-function-configuration \
            --function-name gitRepoTest \
            --layers ${{ env.latest_upload_layer_arn }}
    
  thumb-lambda:
    if: change=$(echo "${{ needs.env-settig.outputs.change-files }}" | grep -c '^source/micehubThumb/')
    runs-on: ubuntu-latest
    needs: [ env-setting ]
    steps:
      - name: print
        run: echo ${{ needs.env-settig.outputs.change-files }}

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Deploy function code
      - name: Package function code
        run: |
          cd source/micehubThumb/function
          zip -r ../function.zip ./*

      - name: Deploy Lambda function
        run: |
          cd source/micehubThumb
          aws lambda update-function-code \
            --function-name gitThumbTest \
            --zip-file fileb://function.zip \
            --publish
      
      # Deploy layer
      - name: Install dependencies and build layer
        if: change=$(echo "${{ needs.env-settig.outputs.change-files }}" | grep -c '^source/micehubThumb/requirements.txt')
        run: |
          python -m pip install --upgrade pip
          cd source/micehubThumb
          pip install -r requirements.txt -t python
          zip -r9 python.zip ./python

      - name: Declare layer variable
        run: |
          echo "latest_thumb_layer_arn=" >> $GITHUB_ENV

      - name: Deploy Lambda layer
        if: change=$(echo "${{ needs.env-settig.outputs.change-files }}" | grep -c '^source/micehubThumb/requirements.txt')
        run: |
          cd source/micehubThumb
          echo "latest_thumb_layer_arn=$(aws lambda publish-layer-version \
            --layer-name testThumbLayer \
            --zip-file fileb://python.zip \
            --compatible-runtimes python3.9 \
            --query 'LayerVersionArn' \
            --output text)" >> $GITHUB_ENV
      
      # Connect function code and layer
      - name: Connect Lambda function and layer
        if: change=$(echo "${{ needs.env-settig.outputs.change-files }}" | grep -c '^source/micehubThumb/requirements.txt')
        run: |
          aws lambda update-function-configuration \
            --function-name gitThumbTest \
            --layers arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p39-pillow:1 ${{ env.latest_thumb_layer_arn }} 
